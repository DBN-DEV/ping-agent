syntax = "proto3";

option go_package = ".;grpc";
package controller_grpc;

enum CommandType {
  Ping = 0;
  TcpPing = 1;
  Fping = 2;
  Mtr = 3;
}

message RegisterRequest {
  uint32 AgentID = 1;
}

message UpdateCommandResponse {
  CommandType CommandType = 1;
  string Version = 2;
}

message CommandRequest {
  uint32 AgentID = 1;
  string Version = 2;
}

message GrpcPingCommand {
  string IP = 1;
  uint32 TimeoutMS = 2;
  uint32 IntervalMS = 3;
}

message PingCommandsResponse {
  string Version = 1;
  repeated GrpcPingCommand PingCommands = 2;
}

message GrpcTcpPingCommand {
  string Target = 1;
  uint32 TimeoutMS = 2;
  uint32 IntervalMS = 3;
}

message TcpPingCommandResponse {
  string Version = 1;
  repeated GrpcTcpPingCommand TcpPingCommands = 2;
}

message FpingCommandResponse {
  string Version = 1;
  repeated string IPAddrs = 2;
  uint32 TimeoutMS = 3;
}

message MtrCommandResponse {
  string Version = 1;
  string IP = 2;
  uint32 Times = 3;
  uint32 HopLimit = 4;
  uint32 TimeoutMS = 5;
}

service Controller {
  rpc CommandChange (RegisterRequest) returns (stream UpdateCommandResponse);
  rpc GetTcpPingCommand (CommandRequest) returns (PingCommandsResponse);
  rpc GetPingCommand (CommandRequest) returns (TcpPingCommandResponse);
  rpc GetFpingCommand (CommandRequest) returns (FpingCommandResponse);
  rpc GetMtrCommand (CommandRequest) returns (MtrCommandResponse);
}

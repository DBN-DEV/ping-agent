syntax = "proto3";

option go_package = ".;grpc";
package collector_grpc;

message Empty {}

message GrpcPingResult {
  string IP = 1;
  bool IsTimeout = 2;
  uint32 RttMicros = 3;
  int64 UTCSendAt = 4;
}

message PingReportRequest {
  GrpcPingResult Result = 1;
  uint32 AgentID = 2;
}

message GrpcTcpPingResult {
  string Target = 1;
  bool IsTimeout = 2;
  uint32 RttMicros = 3;
  int64 UTCSendAt = 4;
}

message TcpPingReportRequest {
  GrpcTcpPingResult Result = 1;
  uint32 AgentID = 2;
}

message GrpcFPingResult {
  string IP = 1;
  bool IsTimeout = 2;
  uint32 RttMicros = 3;
}

message FPingReportRequest {
  repeated GrpcFPingResult Results = 1;
  uint32 AgentID = 2;
  string Version = 3;
}

message GrpcMTRResult {
  uint32 Hop = 1;
  string IP = 2;
  bool IsTimeout = 3;
  uint32 RttMicros = 4;
}

message MTRReportRequest {
  repeated GrpcMTRResult Results = 1;
  uint32 AgentID = 2;
  string Version = 3;
}

service Collector {
  rpc HeartbeatReport (Empty) returns (Empty);
  rpc PingReport (PingReportRequest) returns (Empty);
  rpc TcpPingReport (TcpPingReportRequest) returns (Empty);
  rpc FpingReport (FPingReportRequest) returns (Empty);
}
